object NetworkWordCount {
 def main(args: Array[String]) { 
  if (args.length < 4) {
  System.err.printIn{"Usage: NetworkWordCount <master> <hostname> <port> <seconds>\n" +
  "In local mode, <master> should be 'local[n]' with n > 1"
  System.exit(l)
}

StreamingExamples. setStrea/ningLogLeveis()

//首先应该新建一个streamingContext，第一个参数是master，第三个操作是几秒钟统计一次，第四个参数是spark home，第五个参数是指定jar包
val ssc = new StreamingContext(args(0),  "NetworkWordCount", Seconds(args (3). tolnt),
System.getenv("SPARK_HOME"), StreamingContext.jarOfClass(this.getClass))

//然后生成DStream
val lines = ssc.socketTextStream(args(l), args(2).tolnt, StoraqeLe\/el.MEMORY_ONLY_SER)//返回DStream， 第一个参数是hostname，第二个参数是port(数据源的端口)

//最后，和rdd的操作差不多
val words = lines.flatMap(_.split{" " ))
val wordCounts = words.map(x => {x, 1)).reduceByKey(_ + _)
wordCounts.print()

ssc.startO
ssc.awaitTerminatio()//等待DStream执行结束
